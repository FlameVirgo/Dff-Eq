from sympy import *
import time

"""
Name: Sachin Letchumanan
Date: 03/18/2024
Description: RK4 Simulation
"""

def RK4(diffEq, x0, y0, step, xf):
    x = Symbol("x")
    y = Symbol("y")
    iterations = int((xf - x0) / step)                                     # indicates how many attempts it will take to get from x0 to xf with a given step size
    start_time = time.time()
    for i in range(iterations):
        k1 = diffEq.subs({x: x0, y: y0})                                   # k1
        k2 = diffEq.subs({x: x0 + (step / 2) , y: y0 + step * (k1 / 2)})   # k2 
        k3 = diffEq.subs({x: x0 + (step / 2) , y: y0 + step * (k2 / 2)})   # k3 
        k4 = diffEq.subs({x: x0 + step, y: y0 + step * (k3)})              # k4
        y0 += (step/6) * (k1 + 2*k2 + 2*k3 + k4)                           # update y0 
        x0 += step                                                         # increment x0 by step to go to next iteration
    end_time = time.time()
    return y0, end_time - start_time

# Test Case
x = Symbol("x")
y = Symbol("y")
diffEq = 2 * x * y
x0 = 1
y0 = 1
step = 0.1
xf = 1.5
result, time_taken = RK4(diffEq, x0, y0, step, xf)
print("Result:", result)
print("Time taken:", time_taken, "seconds")
